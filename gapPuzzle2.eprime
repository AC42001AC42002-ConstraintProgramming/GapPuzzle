language ESSENCE' 1.0

letting vertGaps = [0,0,4,0,0,0,0,0,0]
letting horizGaps =  [0,0,0,0,0,0,0,0,4]

find m : matrix indexed by [int(1..9), int(1..9)] of int(0..1)

such that 

$ 2 squares per row + gaps. when out of bounds evaluates to false
forAll row : int(1..9) . 
	sum(m[row,..]) = 2 /\ 
		(forAll c: int(1..9).
		m[row,c] = 1 -> (( horizGaps[row]!=0 ->  ((m[row, c-(horizGaps[row]+1)] = 1) \/ (m[row, c+(horizGaps[row]+1)] = 1))
		(forAll a: int(-1..1)
			(forAll b: int(-1..1)
				!(m[row-a,row-b] != 0)
			))),
			$,
			$/\ !(m[row-1,c-1] != 0 \/ 
			$	m[row-1,c] != 0 \/ 
			$	m[row-1,c+1] != 0 \/ 
			$	m[row+1,c-1] != 0 \/ 
			$	m[row+1,c] != 0 \/ 
			$	m[row,c-1] != 0 \/ 
			$	m[row,c+1] != 0 \/ 
			$	m[row+1,c+1] != 0))),


$2 squares per column + gaps
forAll col : int(1..9) . 
	sum(m[..,col]) = 2 /\ 
		(forAll r: int(1..9).
		m[r,col] = 1 -> (vertGaps[col]!=0 -> ((m[r-(vertGaps[col]+1), col] = 1) \/ (m[r+(vertGaps[col]+1), col] = 1) )))
